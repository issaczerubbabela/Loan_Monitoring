import streamlit as st
import os

# Assume these are functions from your existing files
def perform_web_search(borrower_info, selected_attributes):
    """
    Simulated function that performs SERP API search using borrower_info and selected_attributes.
    Saves articles to 'articles' folder.
    """
    # You can integrate your actual code here
    os.makedirs('articles', exist_ok=True)
    # Simulate creating an article file
    with open(f'articles/{borrower_info["borrower_id"]}_articles.txt', 'w') as f:
        f.write(f"Simulated articles for {borrower_info['borrower_name']} with attributes {selected_attributes}")
    return f'articles/{borrower_info["borrower_id"]}_articles.txt'

# Streamlit UI
st.title("Borrower Risk Assessment Web Search Tool")

with st.form("borrower_form"):
    st.subheader("Borrower Information")

    borrower_id = st.text_input("Borrower ID")
    borrower_name = st.text_input("Borrower Name")
    loan_amount = st.number_input("Loan Amount", min_value=0.0, step=1000.0, format="%.2f")
    loan_start_year = st.number_input("Loan Start Year", min_value=1900, max_value=2100, step=1)
    job_title = st.text_input("Job Title")
    company = st.text_input("Company")
    industry = st.text_input("Industry")
    repayments_on_time = st.number_input("Repayments On Time", min_value=0, step=1)
    late_payments = st.number_input("Late Payments", min_value=0, step=1)
    avg_days_late = st.number_input("Average Days Late", min_value=0.0, step=1.0)
    age = st.number_input("Age", min_value=0, step=1)
    location = st.text_input("Location")

    st.subheader("Additional Attributes to Query (checkboxes)")

    attr_financial_health = st.checkbox("Financial Health")
    attr_employer_reputation = st.checkbox("Employer Reputation")
    attr_industry_trends = st.checkbox("Industry Trends")
    attr_social_media_sentiment = st.checkbox("Social Media Sentiment")
    attr_litigation_history = st.checkbox("Litigation History")

    submitted = st.form_submit_button("Submit and Search")

if submitted:
    # Prepare borrower data
    borrower_info = {
        "borrower_id": borrower_id,
        "borrower_name": borrower_name,
        "loan_amount": loan_amount,
        "loan_start_year": loan_start_year,
        "job_title": job_title,
        "company": company,
        "industry": industry,
        "repayments_on_time": repayments_on_time,
        "late_payments": late_payments,
        "avg_days_late": avg_days_late,
        "age": age,
        "location": location
    }

    # Collect selected attributes
    selected_attributes = []
    if attr_financial_health:
        selected_attributes.append("Financial Health")
    if attr_employer_reputation:
        selected_attributes.append("Employer Reputation")
    if attr_industry_trends:
        selected_attributes.append("Industry Trends")
    if attr_social_media_sentiment:
        selected_attributes.append("Social Media Sentiment")
    if attr_litigation_history:
        selected_attributes.append("Litigation History")

    st.write("Performing web search with the following attributes:", selected_attributes)

    # Call your SERP API function
    article_file = perform_web_search(borrower_info, selected_attributes)
    st.success(f"Articles saved to: {article_file}")

    # You can optionally call your uploader file here, or provide a button for next step
    # For example:
    # if st.button("Upload Articles and Get Response"):
    #     upload_and_get_response(article_file)

    st.info("Proceed to next step when ready.")
